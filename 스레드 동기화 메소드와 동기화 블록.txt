공유객체를 사용할때 주의할점
멀티 스레드가 하나의 객체를 공유하므로해서 생기는 오류
ex) user1의 스레드:  memory = 100;
	이후 2초간 일시정지하면
	user2 스레드: memory = 50; 넣고 2초간 일시정지하게 되면
	그 후 user1의 memory를 출력하게 되면 100을 출력하는 것이 아닌 50을 출력하게 됨
=> 공유객체는 항상 변할 수 있으므로 주의해야 함

그것을 방지하기 위해
동기화 메소드 및 동기화 블록을 사용(synchronized)
단 하나의 스레드만 실행할 수 있는 메소드 또는 블록을 말한다.
다른 스레드는 메소드나 블록이 실행이 끝날 때까지 대기해야 한다.

스레드1 			스레드2
[동기화 메소드]	[동기화블록]		[일반메소드]
스레드1이 동기화 메소드를 사용할 경우 스레드2는 동기화메소드 및 동기화 블록을 사용x 일반메소드 사용가능
반대도 마찬가지

따라서 공유객체를 동기화메소드와 동기화 블록을 사용하면 user1이 사용이 끝날때 까지 user2는 사용불가
같은 동기화메소드와 동기화블록 뿐 아닌 다른 동기화메소드와 동기화블록도 user2는 사용할 수 없게 된다.

동기화 메소드 사용방법: 
public synchronized void method() // 로 사용 단 하나의 스레드만 실행가능(임계영역이라함)

동기화 블록 사용방법:
public void method(){
//여러 스레드 실행가능영역
}

synchronized(공유객체) {
	임계영역구간
}

여러 스레드가 실행 가능 영역

	